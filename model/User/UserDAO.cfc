<cfcomponent displayname="UserDAO" hint="table ID column = SysUserID">	<cfproperty name="dsn" inject="coldbox:datasource:theDSN" />	<cffunction name="init" access="public" output="false" returntype="UserDAO">			<cfreturn this>	</cffunction>		<cffunction name="create" access="public" output="false" returntype="numeric">		<cfargument name="User" type="User" required="true" />         		<!--- <cfif arguments.user.getisActive is 'on'>        		<cfset var activechk =1>        	<cfelse>        		<cfset var activechk =0>        	</cfif>--->        		<cfset var qCreate = "" />		                <cfquery name="qCreate" datasource="#dsn.getName()#">                        INSERT INTO SysUser                            (Name                            ,Description                            ,Email                            ,Password                            ,isActive                            ,programID                            ,categoryID                            ,implementingPartner)                        VALUES                            (                            <cfqueryparam value="#arguments.User.getName()#" CFSQLType="cf_sql_varchar" />,                            <cfqueryparam value="#arguments.User.getDescription()#" CFSQLType="cf_sql_varchar" null="#not len(arguments.User.getDescription())#" />,                            <cfqueryparam value="#arguments.User.getEmail()#" CFSQLType="cf_sql_varchar" />,       		             	<!--- <cfqueryparam value="#activeChk#" cfsqltype="cf_sql_bit"  null="#not len(arguments.User.getisActive())#" />,--->                           	<cfqueryparam value="#hash(arguments.User.getPassword(),'SHA')#" CFSQLType="cf_sql_varchar" />,        		   			<!---<cfqueryparam value="#arguments.User.getactivationGUID()#" CFSQLType="cf_sql_idstamp" null="#not len(arguments.User.getactivationGUID())#" />, --->		  			   				<!---<cfqueryparam value="#arguments.User.getactivationExpiration()#" CFSQLType="cf_sql_timestamp" null="#not len(arguments.User.getactivationExpiration())#" />--->			   				<cfqueryparam value="#arguments.User.getisActive()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getisActive())#" />,			   				<cfqueryparam value="#arguments.User.getprogramID()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getprogramID())#" />,			   				<cfqueryparam value="#arguments.User.getcategoryID()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getcategoryID())#" />,			   					<cfqueryparam value="#arguments.User.getimplementingPartner()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getimplementingPartner())#" />                            )                            select @@identity as maxid                    </cfquery>                                        		<cfreturn qCreate.maxid />	</cffunction>	<cffunction name="generatepass" access="public" output="false" returntype="numeric">		<cfargument name="SysUserID" type="numeric" required="true" />		    <cfset var genpass = generate()>            <cfquery name="qUpPass" datasource="#dsn.getName()#">				UPDATE	SysUser				SET				Password = <cfqueryparam value="#hash(genpass,'SHA')#" CFSQLType="cf_sql_varchar" />				WHERE	SysUserID = <cfqueryparam value="#arguments.SysUserID#" CFSQLType="cf_sql_integer" />			</cfquery>		<cfreturn #arguments.SysUserID# />	</cffunction>	<cffunction name="read" access="public" output="false" returntype="void">		<cfargument name="User" type="User" required="true" />		<cfset var qRead = "" />		<cfset var strReturn = structNew() />			<cfquery name="qRead" datasource="#dsn.getName()#">				SELECT					SysUserID,					Name,					Description,					Email,					Password,					activationGUID,					activationExpiration,					isActive,					programID,					categoryID,					implementingPartner				FROM	SysUser				WHERE	SysUserID = <cfqueryparam value="#arguments.User.getSysUserID()#" CFSQLType="cf_sql_integer" />			</cfquery>		<cfif qRead.recordCount>			<cfset strReturn = queryRowToStruct(qRead)>			<cfset arguments.User.init(argumentCollection=strReturn)>		</cfif>	</cffunction>	<cffunction name="update" access="public" output="false" returntype="numeric">		<cfargument name="User" type="User" required="true" />		 <!--- <cfif arguments.user.getisActive is 'true'>		 	<cfset var activechk =1>		 <cfelse>		 	<cfset var activechk =0>		 </cfif> --->		<cfset var qUpdate = "" />            	    	<cfquery name="qUpdate" datasource="#dsn.getName()#">				UPDATE	SysUser				SET					Name = <cfqueryparam value="#arguments.User.getName()#" CFSQLType="cf_sql_varchar" />,					Description = <cfqueryparam value="#arguments.User.getDescription()#" CFSQLType="cf_sql_varchar" null="#not len(arguments.User.getDescription())#" />,					Email = <cfqueryparam value="#arguments.User.getEmail()#" CFSQLType="cf_sql_varchar" />,					<cfif len(trim(arguments.user.getPassword()))>						Password = <cfqueryparam value="#hash(arguments.User.getPassword(),'SHA')#" CFSQLType="cf_sql_varchar" />,					</cfif>					<!---activationGUID = <cfqueryparam value="#arguments.User.getactivationGUID()#" CFSQLType="cf_sql_idstamp" null="#not len(arguments.User.getactivationGUID())#" />,--->					activationExpiration = <cfqueryparam value="#arguments.User.getactivationExpiration()#" CFSQLType="cf_sql_timestamp" null="#not len(arguments.User.getactivationExpiration())#" />,					isActive = <cfqueryparam value="#arguments.User.getisActive()#" CFSQLType="cf_sql_bit" null="#not len(arguments.User.getisActive())#" />,					programID = <cfqueryparam value="#arguments.User.getprogramID()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getprogramID())#" />,					categoryID = <cfqueryparam value="#arguments.User.getcategoryID()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getcategoryID())#" />,					implementingPartner = <cfqueryparam value="#arguments.User.getimplementingPartner()#" CFSQLType="cf_sql_integer" null="#not len(arguments.User.getimplementingPartner())#" />				WHERE	SysUserID = <cfqueryparam value="#arguments.User.getSysUserID()#" CFSQLType="cf_sql_integer" />			</cfquery>		<cfreturn #arguments.User.getSysUserID()# />	</cffunction>	<cffunction name="updatePass" access="public" output="false" returntype="numeric">		<cfargument name="sysUserID" type="numeric" required="true" />		<cfargument name="password" type="string" required="true" />        		<cfset var qUpdate = "" />            <cfquery name="qUpdate" datasource="#dsn.getName()#">				UPDATE	SysUser				SET					Password = <cfqueryparam value="#hash(arguments.Password,'SHA')#" CFSQLType="cf_sql_varchar" />,					activationExpiration = <cfqueryparam value="#createodbcdatetime(DateAdd('m', 3, now()))#" CFSQLType="cf_sql_timestamp" <!---null="#not len(arguments.User.getactivationExpiration())#"---> />				WHERE	SysUserID = <cfqueryparam value="#arguments.SysUserID#" CFSQLType="cf_sql_integer" />			</cfquery>		<cfreturn #arguments.SysUserID# />	</cffunction>	<cffunction name="delete" access="public" output="false" returntype="boolean">		<cfargument name="User" type="User" required="true" />		<cfset var qDelete = "">			<cfquery name="qDelete" datasource="#dsn.getName()#">				UPDATE SysUser 				   SET isActive = <cfqueryparam value="0" cfsqltype="cf_sql_bit" />				 WHERE	SysUserID = <cfqueryparam value="#arguments.User.getSysUserID()#" CFSQLType="cf_sql_integer" />				<!--- 				DELETE FROM	SysUser 				 WHERE	SysUserID = <cfqueryparam value="#arguments.User.getSysUserID()#" CFSQLType="cf_sql_integer" />					--->			</cfquery>		<cfreturn true />	</cffunction>	<cffunction name="exists" access="public" output="false" returntype="boolean">		<cfargument name="User" type="User" required="true" />		<cfset var qExists = "">		<cfquery name="qExists" datasource="#dsn.getName()#" maxrows="1">			SELECT count(1) as idexists			FROM	SysUser			WHERE	SysUserID = <cfqueryparam value="#arguments.User.getSysUserID()#" CFSQLType="cf_sql_integer" />		</cfquery>		<cfif qExists.idexists>			<cfreturn true />		<cfelse>			<cfreturn false />		</cfif>	</cffunction>	<cffunction name="save" access="public" output="false" returntype="numeric">		<cfargument name="User" type="User" required="true" />				<cfset var success = false />		<cfif exists(arguments.User)>			<cfset var sysUserID = update(arguments.User) /> 		<cfelse>  				<cfset var sysUserID= create(arguments.User) />		</cfif>				<cfreturn sysUserID />	</cffunction>	<cffunction name="activateUser" access="public" output="false" returntype="numeric">		<cfargument name="sysUserID" type="numeric" required="true" />		<cfargument name="password" type="string" required="true" />		<cfset var qUpdate = "" />                      <cfquery name="qUpdate" datasource="#dsn.getName()#">				UPDATE	SysUser				SET					isActive = <cfqueryparam value="1" cfsqltype="cf_sql_bit" />,					Password = <cfqueryparam value="#hash(arguments.Password,"SHA")#" CFSQLType="cf_sql_varchar" />				WHERE	SysUserID = <cfqueryparam value="#arguments.SysUserID#" CFSQLType="cf_sql_integer" />			</cfquery>		<cfreturn #arguments.SysUserID# />	</cffunction>	<cffunction name="disableUser" access="public" output="false" returntype="numeric">		<cfargument name="sysUserID" type="numeric" required="true" />		<cfset var qUpdate = "" />                      <cfquery name="qUpdate" datasource="#dsn.getName()#">				UPDATE	SysUser				   SET  isActive = <cfqueryparam value="0" cfsqltype="cf_sql_bit" />				 WHERE	SysUserID = <cfqueryparam value="#arguments.SysUserID#" CFSQLType="cf_sql_integer" />			</cfquery>		<cfreturn #arguments.SysUserID# />	</cffunction>	<cffunction name="queryRowToStruct" access="private" output="false" returntype="struct">		<cfargument name="qry" type="query" required="true">				<cfscript>			/**			 * Makes a row of a query into a structure.			 * 			 * @param query 	 The query to work with. 			 * @param row 	 Row number to check. Defaults to row 1. 			 * @return Returns a structure. 			 * @author Nathan Dintenfass (nathan@changemedia.com) 			 * @version 1, December 11, 2001 			 */			//by default, do this to the first row of the query			var row = 1;			//a var for looping			var ii = 1;			//the cols to loop over			var cols = listToArray(qry.columnList);			//the struct to return			var stReturn = structnew();			//if there is a second argument, use that for the row number			if(arrayLen(arguments) GT 1)				row = arguments[2];			//loop over the cols and build the struct from the query row			for(ii = 1; ii lte arraylen(cols); ii = ii + 1){				stReturn[cols[ii]] = qry[cols[ii]][row];			}					//return the struct			return stReturn;		</cfscript>	</cffunction>		</cfcomponent>
