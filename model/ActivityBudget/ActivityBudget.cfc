<cfcomponent displayname="ActivityBudget" output="false">		<cfproperty name="dsn" inject="coldbox:datasource:theDSN" />		<cfproperty name="ActivityBudgetID" type="numeric" default="" />		<cfproperty name="ActivityID" type="numeric" default="" />		<cfproperty name="categoryToCategoryID" type="numeric" default="" />		<cfproperty name="countryID" type="numeric" default="" />		<cfproperty name="BudgetItem" type="string" default="" />		<cfproperty name="BudgetAmount" type="numeric" default="" />		<cfproperty name="placeOfImplementation" type="string" default="" />		<cfproperty name="projectCountries" type="string" default="" />			<!---	PROPERTIES	--->	<cfset variables.instance = StructNew() />	<!---	INITIALIZATION / CONFIGURATION	--->	<cffunction name="init" access="public" returntype="ActivityBudget" output="false">		<cfargument name="ActivityBudgetID" type="string" required="false" default="" />		<cfargument name="ActivityID" type="string" required="false" default="" />		<cfargument name="categoryToCategoryID" type="string" required="false" default="" />		<cfargument name="countryID" type="string" required="false" default="" />		<cfargument name="BudgetItem" type="string" required="false" default="" />		<cfargument name="BudgetAmount" type="string" required="false" default="" />		<cfargument name="placeOfImplementation" type="string" required="false" default="" />		<cfargument name="projectCountries" type="string" required="false" default="" />					<!--- run setters --->		<cfset setActivityBudgetID(arguments.ActivityBudgetID) />		<cfset setActivityID(arguments.ActivityID) />		<cfset setcategoryToCategoryID(arguments.categoryToCategoryID) />		<cfset setcountryID(arguments.countryID) />		<cfset setBudgetItem(arguments.BudgetItem) />		<cfset setBudgetAmount(arguments.BudgetAmount) />		<cfset setBudgetAmount(arguments.projectCountries) />		<cfset setplaceOfImplementation(arguments.placeOfImplementation) />			<cfset setprojectCountries(arguments.projectCountries) />							<cfreturn this /> 	</cffunction>	<!---	PUBLIC FUNCTIONS	--->	<cffunction name="setMemento" access="public" returntype="ActivityBudget" output="false">		<cfargument name="memento" type="struct" required="yes"/>		<cfset variables.instance = arguments.memento />		<cfreturn this />	</cffunction>	<cffunction name="getMemento" access="public" returntype="struct" output="false" >		<cfreturn variables.instance />	</cffunction>	<cffunction name="validateProposal" access="public" returntype="array" output="false">		<cfset var errors = arrayNew(1) />		<cfset var thisError = structNew() />			<!--- BudgetItem --->		<cfif (len(trim(getBudgetItem())) AND NOT IsSimpleValue(trim(getBudgetItem())))>			<cfset thisError.field = "BudgetItem" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "Form Section ##13:  Funding breakdown budget item is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getBudgetItem())) GT 255)>			<cfset thisError.field = "BudgetItem" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "Form Section ##13:  Funding breakdown budget item description is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>					<!--- BudgetAmount --->		<cfset setBudgetAmount( REReplace(getBudgetAmount(),",","","all") ) />		<cfif (len(trim(getBudgetAmount())) AND NOT isNumeric(trim(getBudgetAmount())))>			<cfset thisError.field = "BudgetAmount" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "Form Section ##13: Funding breakdown amount is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>					<cfreturn errors />	</cffunction>				<cffunction name="validateSubmit" access="public" returntype="array" output="false">		<cfset var errors = arrayNew(1) />		<cfset var thisError = structNew() />				<!--- Place of Implementation --->		<cfif (len(trim(getplaceOfImplementation())) AND IsSimpleValue(trim(getplaceOfImplementation())))>			<cfif (len(trim(getplaceOfImplementation())) AND trim(getplaceOfImplementation()) IS 'Country' )>											<!--- countryID --->				<cfif NOT len(trim(getcountryID()))>					<cfset thisError.field = "countryID" />					<cfset thisError.type = "invalidType" />					<cfset thisError.message = "Form Section ##13: Funding breakdown for country(ies) not completed." />					<cfset arrayAppend(errors,duplicate(thisError)) />								</cfif>										<!--- BudgetAmount --->				<cfif NOT len(trim(getBudgetAmount()))>					<cfset thisError.field = "BudgetAmount" />					<cfset thisError.type = "invalidType" />					<cfset thisError.message = "Form Section ##13: Funding breakdown budget amount is required." />					<cfset arrayAppend(errors,duplicate(thisError)) />								</cfif>									<!--- budget item --->				<cfif NOT len(trim(getBudgetItem()))>					<cfset thisError.field = "BudgetItem" />					<cfset thisError.type = "invalidType" />					<cfset thisError.message = "Form Section ##13:  Funding breakdown budget item is required" />					<cfset arrayAppend(errors,duplicate(thisError)) />				</cfif>														</cfif>		</cfif>						<cfreturn errors />	</cffunction>										<cffunction name="validate" access="public" returntype="array" output="false">		<cfset var errors = arrayNew(1) />		<cfset var thisError = structNew() />				<!--- ActivityBudgetID --->		<!--- <cfif (NOT len(trim(getActivityBudgetID())))>			<cfset thisError.field = "ActivityBudgetID" />			<cfset thisError.type = "required" />			<cfset thisError.message = "ActivityBudgetID is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif> --->		<!--- <cfif (len(trim(getActivityBudgetID())) AND NOT isNumeric(trim(getActivityBudgetID())))>			<cfset thisError.field = "ActivityBudgetID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "ActivityBudgetID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif> --->			<!--- ActivityID --->		<cfif (NOT len(trim(getActivityID())))>			<cfset thisError.field = "ActivityID" />			<cfset thisError.type = "required" />			<cfset thisError.message = "ActivityID is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getActivityID())) AND NOT isNumeric(trim(getActivityID())))>			<cfset thisError.field = "ActivityID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "ActivityID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>
		<!--- categoryToCategoryID --->		<cfif (len(trim(getcategoryToCategoryID())) AND NOT isNumeric(trim(getcategoryToCategoryID())))>			<cfset thisError.field = "categoryToCategoryID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "categoryToCategoryID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- countryID --->		<cfif (len(trim(getcountryID())) AND NOT isNumeric(trim(getcountryID())))>			<cfset thisError.field = "countryID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "countryID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>					<!--- BudgetItem --->		<cfif (len(trim(getBudgetItem())) AND NOT IsSimpleValue(trim(getBudgetItem())))>			<cfset thisError.field = "BudgetItem" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "BudgetItem is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getBudgetItem())) GT 255)>			<cfset thisError.field = "BudgetItem" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "BudgetItem is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>								<!--- BudgetAmount --->		<cfif (len(trim(getBudgetAmount())) AND NOT isNumeric(trim(getBudgetAmount())))>			<cfset thisError.field = "BudgetAmount" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "BudgetAmount is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />				</cfif>				<!--- Place of Implementation - countries --->			<cfif (len(trim(getplaceOfImplementation())) AND trim(getplaceOfImplementation()) IS 'Country' )>			<cfif NOT len(trim(getprojectCountries()))>				<cfset thisError.type = "invalidType" />				<cfset thisError.message = "Place of implementation Country not selected." />				<cfset arrayAppend(errors,duplicate(thisError)) />					<cfset thisError.field = "placeOfImplementation" />					</cfif>		</cfif>								<cfreturn errors />	</cffunction>	<!---	ACCESSORS	--->	<cffunction name="setActivityBudgetID" access="public" returntype="void" output="false">		<cfargument name="ActivityBudgetID" type="string" required="true" />		<cfset variables.instance.ActivityBudgetID = arguments.ActivityBudgetID />	</cffunction>	<cffunction name="getActivityBudgetID" access="public" returntype="string" output="false">		<cfreturn variables.instance.ActivityBudgetID />	</cffunction>	<cffunction name="setActivityID" access="public" returntype="void" output="false">		<cfargument name="ActivityID" type="string" required="true" />		<cfset variables.instance.ActivityID = arguments.ActivityID />	</cffunction>	<cffunction name="getActivityID" access="public" returntype="string" output="false">		<cfreturn variables.instance.ActivityID />	</cffunction>	<cffunction name="setcategoryToCategoryID" access="public" returntype="void" output="false">		<cfargument name="categoryToCategoryID" type="string" required="true" />		<cfset variables.instance.categoryToCategoryID = arguments.categoryToCategoryID />	</cffunction>	<cffunction name="getcategoryToCategoryID" access="public" returntype="string" output="false">		<cfreturn variables.instance.categoryToCategoryID />	</cffunction>	<cffunction name="setcountryID" access="public" returntype="void" output="false">		<cfargument name="countryID" type="string" required="true" />		<cfset variables.instance.countryID = arguments.countryID />	</cffunction>	<cffunction name="getcountryID" access="public" returntype="string" output="false">		<cfreturn variables.instance.countryID />	</cffunction>	<cffunction name="setBudgetItem" access="public" returntype="void" output="false">		<cfargument name="BudgetItem" type="string" required="true" />		<cfset variables.instance.BudgetItem = arguments.BudgetItem />	</cffunction>	<cffunction name="getBudgetItem" access="public" returntype="string" output="false">		<cfreturn variables.instance.BudgetItem />	</cffunction>	<cffunction name="setBudgetAmount" access="public" returntype="void" output="false">		<cfargument name="BudgetAmount" type="string" required="true" />		<cfset variables.instance.BudgetAmount = arguments.BudgetAmount />	</cffunction>	<cffunction name="getBudgetAmount" access="public" returntype="string" output="false">		<cfreturn variables.instance.BudgetAmount />	</cffunction>	<cffunction name="setplaceOfImplementation" access="public" returntype="void" output="false">		<cfargument name="placeOfImplementation" type="string" required="true" />		<cfset variables.instance.placeOfImplementation = arguments.placeOfImplementation />	</cffunction>	<cffunction name="getplaceOfImplementation" access="public" returntype="string" output="false">		<cfreturn variables.instance.placeOfImplementation />	</cffunction>	<cffunction name="setprojectCountries" access="public" returntype="void" output="false">		<cfargument name="projectCountries" type="string" required="true" />		<cfset variables.instance.projectCountries = arguments.projectCountries />	</cffunction>	<cffunction name="getprojectCountries" access="public" returntype="string" output="false">		<cfreturn variables.instance.projectCountries />	</cffunction>	<!---	DUMP	--->	<cffunction name="dump" access="public" output="true" return="void">		<cfargument name="abort" type="boolean" default="false" />		<cfdump var="#variables.instance#" />		<cfif arguments.abort>			<cfabort />		</cfif>	</cffunction></cfcomponent>
